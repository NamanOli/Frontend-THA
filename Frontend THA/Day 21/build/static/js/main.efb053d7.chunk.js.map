{"version":3,"sources":["CartItem.js","Cart.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["CartItem","this","props","product","qty","price","title","className","style","height","width","borderRadius","background","src","img","fontSize","color","alt","onClick","onIncreaseQuantity","onDecreaseQuantity","onDeleteProduct","id","React","Component","Cart","products","map","key","styles","nav","display","justifyContent","alignItems","cartIcon","marginRight","cartIconContainer","position","cartCount","padding","right","top","Navbar","console","log","count","App","handleIncreaseQuantity","state","index","indexOf","db","collection","doc","update","then","catch","error","handleDecreaseQuantity","handleDeleteProduct","delete","err","getcountOfCartItems","forEach","getcartTotal","cartTotal","addProduct","add","docRef","get","snapshot","data","loading","firebase","firestore","orderBy","onSnapshot","docs","setState","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efb053d7.chunk.js","sourcesContent":["import React from 'react';\n\nclass CartItem extends React.Component {\n  render () {\n    const { qty, price, title } = this.props.product;\n    const { product } = this.props;\n\n    return (\n      <div className=\"cart-item\">\n        <div className=\"left-block\">\n          <img\n            style={{ height: 110, width: 110, borderRadius: 5, background: '#ccc' }}\n            src={product.img}\n          />\n        </div>\n        <div className=\"right-block\">\n          <div style={{ fontSize: 25 }}> {title} </div>\n          <div style={{ color: '#777' }}>{price}</div>\n          <div style={{ color: '#777' }}>Qty: {qty}</div>\n          <div className=\"cart-item-actions\">\n            <img \n              alt=\"add\"\n              src=\"https://image.flaticon.com/icons/svg/1665/1665578.svg\"\n              className=\"action-icons\"\n              onClick={() => this.props.onIncreaseQuantity(product)}\n            />\n            <img\n              alt=\"minus\"\n              src=\"https://image.flaticon.com/icons/svg/1665/1665612.svg\"\n              className=\"action-icons\"\n              onClick={() => this.props.onDecreaseQuantity(product)}\n            />\n            <img\n              alt=\"delete\"\n              src=\"https://image.flaticon.com/icons/svg/1214/1214428.svg\"\n              className=\"action-icons\"\n              onClick={() => this.props.onDeleteProduct(product.id)}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CartItem;","import React from 'react';\nimport CartItem from './CartItem';\n\nconst Cart = (props) => {\n  const { products } = props;\n  \n  return (\n    <div className=\"cart\">\n      {products.map((product) => (\n        <CartItem\n          key={product.id}\n          product={product}\n          onIncreaseQuantity={props.onIncreaseQuantity}\n          onDecreaseQuantity={props.onDecreaseQuantity}\n          onDeleteProduct={props.onDeleteProduct}\n        />\n        ))}\n    </div>\n  )\n}\n\nexport default Cart;","import React from 'react';\n\nconst Navbar = (props) => {\n  console.log('props', props);\n  return (\n    <div style={styles.nav}>\n      <div style={styles.cartIconContainer}>\n        <img src=\"https://image.flaticon.com/icons/svg/1170/1170678.svg\" style={styles.cartIcon} />\n        <span style={styles.cartCount}>{props.count}</span>\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  nav: {\n    height: 70,\n    background:  '#4267b2',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  cartIcon: {\n    height: 32,\n    marginRight: 20\n  },\n  cartIconContainer: {\n    position: 'relative'\n  },\n  cartCount:  {\n    background: 'yellow',\n    borderRadius: '50%',\n    padding:  '4px 8px',\n    position: 'absolute',\n    right: 0,\n    top: -9\n  }\n};\n\nexport default Navbar;","import React from \"react\";\nimport \"./App.css\";\n// import CartItem from './CartItem';\nimport Cart from \"./Cart\";\nimport Navbar from \"./Navbar\";\nimport firebase from 'firebase/app'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n      loading: true\n    };\n    this.db = firebase.firestore();\n  }\n\n  // componentDidMount() {\n  //   firebase\n  //     .firestore()\n  //     .collection(\"products\")\n  //     .get()\n  //     .then(snapshot => {\n  //       const products = snapshot.docs.map(doc => {\n  //         const data = doc.data();\n  //         data[\"id\"] = doc.id;\n  //         return data;\n  //       });\n  //       this.setState({ products: products, loading: false });\n  //     });\n  // }\n\n  componentDidMount() {\n    this.db\n      .collection(\"products\")\n      // .where(\"price\", \"==\", 999)\n      // .where(\"title\", \"==\", \"Mug\")\n      .orderBy(\"price\", \"desc\")\n      .onSnapshot(snapshot => {\n        const products = snapshot.docs.map(doc => {\n          const data = doc.data();\n          data[\"id\"] = doc.id;\n          return data;\n        });\n        this.setState({ products: products, loading: false });\n      });\n  }\n\n  handleIncreaseQuantity = product => {\n    const { products } = this.state;\n    const index = products.indexOf(product);\n\n    // products[index].qty += 1;\n\n    // this.setState({\n    //   products\n    // });\n\n    const docRef = this.db.collection(\"products\").doc(products[index].id);\n\n    docRef\n      .update({ qty: products[index].qty + 1 })\n      .then(() => {\n        console.log(\"Document updated sucessfully\");\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  handleDecreaseQuantity = product => {\n    const { products } = this.state;\n    const index = products.indexOf(product);\n\n    if (products[index].qty === 0) {\n      return;\n    }\n    // products[index].qty -= 1;\n\n    // this.setState({\n    //   products\n    // });\n    const docRef = this.db.collection(\"products\").doc(products[index].id);\n\n    docRef\n      .update({ qty: products[index].qty - 1 })\n      .then(() => {\n        console.log(\"Document updated sucessfully\");\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  handleDeleteProduct = id => {\n    const { products } = this.state;\n\n    const docRef = this.db.collection(\"products\").doc(id);\n\n    docRef\n      .delete()\n      .then(() => {\n        console.log(\"Deleted sucessfully\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n    // const items = products.filter(product => product.id !== id);\n\n    // this.setState({\n    //   products: items\n    // });\n  };\n\n  getcountOfCartItems = () => {\n    const { products } = this.state;\n    let count = 0;\n\n    products.forEach(product => {\n      count += product.qty;\n    });\n\n    return count;\n  };\n\n  getcartTotal = () => {\n    const { products } = this.state;\n    let cartTotal = 0;\n\n    products.map(product => {\n      if (product.qty > 0) {\n        cartTotal = cartTotal + product.qty * product.price;\n      }\n      return \"\";\n    });\n\n    return cartTotal;\n  };\n\n  addProduct = () => {\n    this.db\n      .collection(\"products\")\n      .add({\n        img: \"\",\n        price: 900,\n        qty: 3,\n        title: \"Washing Machine\"\n      })\n      .then(docRef => {\n        docRef.get().then(snapshot => {\n          console.log(\"Product has been added\", snapshot.data());\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    const { products, loading } = this.state;\n    return (\n      <div className=\"App\">\n        <Navbar count={this.getcountOfCartItems()} />\n        {/* <button onClick={this.addProduct} style={{ padding: 20, fontSize: 20 }}>\n          Add a Product\n        </button> */}\n        <Cart\n          onIncreaseQuantity={this.handleIncreaseQuantity}\n          onDecreaseQuantity={this.handleDecreaseQuantity}\n          onDeleteProduct={this.handleDeleteProduct}\n          products={products}\n        />\n        {loading && <h1>Loading Products...</h1>}\n        <div style={{ padding: 10, fontSize: 20 }}>\n          TOTAL : {this.getcartTotal()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyACMQgM6ohz3aLExcTKaJHdWsEyPho_77M\",\n    authDomain: \"cart-e3981.firebaseapp.com\",\n    projectId: \"cart-e3981\",\n    storageBucket: \"cart-e3981.appspot.com\",\n    messagingSenderId: \"585301107083\",\n    appId: \"1:585301107083:web:e3df3c79242e7730ea8f8e\"\n  };\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}